[
    {
        "created": "20230913082833398",
        "text": "\"use strict\";\nvar __create = Object.create,\n  __defProp = Object.defineProperty,\n  __getOwnPropDesc = Object.getOwnPropertyDescriptor,\n  __getOwnPropNames = Object.getOwnPropertyNames,\n  __getProtoOf = Object.getPrototypeOf,\n  __hasOwnProp = Object.prototype.hasOwnProperty,\n  __export = (e, t) => {\n    for (var r in t) __defProp(e, r, { get: t[r], enumerable: !0 });\n  },\n  __copyProps = (t, r, a, o) => {\n    if ((r && \"object\" == typeof r) || \"function\" == typeof r)\n      for (let e of __getOwnPropNames(r))\n        __hasOwnProp.call(t, e) ||\n          e === a ||\n          __defProp(t, e, {\n            get: () => r[e],\n            enumerable: !(o = __getOwnPropDesc(r, e)) || o.enumerable,\n          });\n    return t;\n  },\n  __toESM = (e, t, r) => (\n    (r = null != e ? __create(__getProtoOf(e)) : {}),\n    __copyProps(\n      !t && e && e.__esModule\n        ? r\n        : __defProp(r, \"default\", { value: e, enumerable: !0 }),\n      e\n    )\n  ),\n  __toCommonJS = (e) =>\n    __copyProps(__defProp({}, \"__esModule\", { value: !0 }), e),\n  GitHubHeatMap_exports = {},\n  ECharts =\n    (__export(GitHubHeatMap_exports, { default: () => GitHubHeatMap_default }),\n    (module.exports = __toCommonJS(GitHubHeatMap_exports)),\n    __toESM(require(\"$:/plugins/Gk0Wk/echarts/echarts.min.js\"))),\n  getFilterByDate = (e) => `[sameday:created[${e}]] [sameday:modified[${e}]]`,\n  yearDates = new Map(),\n  dayTime = 864e5,\n  getData = (t, a) => {\n    if (!yearDates.has(t)) {\n      var r = ECharts.number.parseDate(t + \"-01-01\").getTime(),\n        o = ECharts.number.parseDate(t + 1 + \"-01-01\").getTime(),\n        l = [];\n      for (let e = r; e < o; e += dayTime) {\n        var i = ECharts.format.formatTime(\"yyyy-MM-dd\", e),\n          d = i.replace(/-/g, \"\");\n        l.push([i, d]);\n      }\n      yearDates.set(t, l);\n    }\n    let s = 0;\n    return [\n      yearDates.get(t).map(([e, t]) => {\n        var r = $tw.wiki.filterTiddlers(getFilterByDate(t), void 0, a).length;\n        return (s += r), [e, r];\n      }),\n      s,\n    ];\n  },\n  getPlatteColor = (e) =>\n    $tw.wiki.renderText(\n      \"text/plain\",\n      \"text/vnd.tiddlywiki\",\n      `<$transclude tiddler={{$:/palette}} index=\"${e}\"><$transclude tiddler=\"$:/palettes/Vanilla\" index=\"${e}\"><$transclude tiddler=\"$:/config/DefaultColourMappings/${e}\"/></$transclude></$transclude>`,\n      {}\n    ),\n  checkIfChinese = () => {\n    var e;\n    return (\n      !0 ===\n      (null == (e = $tw.wiki.getTiddlerText(\"$:/language\"))\n        ? void 0\n        : e.includes(\"zh\"))\n    );\n  },\n  checkIfDarkMode = () => {\n    var e;\n    return (\n      \"dark\" ===\n      (null ==\n      (e =\n        null == (e = $tw.wiki.getTiddler($tw.wiki.getTiddlerText(\"$:/palette\")))\n          ? void 0\n          : e.fields)\n        ? void 0\n        : e[\"color-scheme\"])\n    );\n  },\n  GitHubHeatMapAddon = {\n    shouldUpdate: (e, t) => 0 < $tw.utils.count(t),\n    onUpdate: (e, t, r) => {\n      var a = parseInt(r.year, 10) || new Date().getFullYear(),\n        o = r.subfilter || \"[all[tiddlers]!is[shadow]!is[system]]\";\n      const p = $tw.wiki.makeTiddlerIterator($tw.wiki.filterTiddlers(o));\n      var [o, l] = getData(a, p);\n      let i = \"\",\n        d = 0,\n        s;\n      e.setOption({\n        title: {\n          top: 0,\n          left: \"center\",\n          text: checkIfChinese()\n            ? `今年产出 ${l} 篇文章`\n            : `Produced ${l} tiddlers this year`,\n        },\n        tooltip: {\n          position: \"top\",\n          formatter: ({ value: [e, t] }) => (\n            (e === i && t === d && s) ||\n              ((s = ((e, t) => {\n                if (0 === t)\n                  return checkIfChinese()\n                    ? ECharts.format.formatTime(\"yyyy年M月d日\", e) + \" 无条目。\"\n                    : $tw.utils.formatDateString(\n                        $tw.utils.parseDate(e.replace(/-/g, \"\")),\n                        \"MMM DDD, YYYY\"\n                      ) + \" no tiddler.\";\n                var r = $tw.utils.domMaker(\"p\", {\n                    text: checkIfChinese()\n                      ? ECharts.format.formatTime(\"yyyy年M月d日\", e) +\n                        ` 共有 ${t} 篇:`\n                      : $tw.utils.formatDateString(\n                          $tw.utils.parseDate(e.replace(/-/g, \"\")),\n                          \"MMM DDD, YYYY\"\n                        ) + ` ${t} tiddler${1 < t ? \"s\" : \"\"}.`,\n                  }),\n\t\t\t\t\t\t\t\t\t\ta = $tw.utils.domMaker(\"ul\", {}),\n                  o = $tw.wiki.filterTiddlers(\n                    getFilterByDate(e.replace(/-/g, \"\")),\n                    void 0,\n                    p\n                  ),\n                \n\t\t\t\t\t\t\t\tl = o.length > 10 ? 10 : o.length\n                for (let s = 0; s < l; s++) {\n                  const n = o[s];\n                  var i = $tw.utils.domMaker(\"li\", {}),\n                    d = $tw.utils.domMaker(\"a\", {\n                      text: n,\n                      class:\n                        \"tc-tiddlylink tc-tiddlylink-resolves tc-popup-handle tc-popup-absolute\",\n                      style: { cursor: \"pointer\" },\n                    });\n                  d.addEventListener(\"click\", () =>\n                    new $tw.Story().navigateTiddler(n)\n                  ),\n                    i.appendChild(d),\n                    a.appendChild(i);\n                }\n                return [r,a];\n              })(e, t)),\n              (i = e),\n              (d = t)),\n            s\n          ),\n          // triggerOn: \"mousemove|click\",\n          enterable: !0,\n          hideDelay: 800,\n          backgroundColor: getPlatteColor(\"page-background\"),\n          borderColor: getPlatteColor(\"very-muted-foreground\"),\n        },\n        visualMap: {\n          type: \"piecewise\",\n          orient: \"horizontal\",\n          calculable: !0,\n          showLabel: !1,\n          right: 0,\n          top: 175,\n          pieces: [\n            { lte: 0, color: \"#EBEDF0\" },\n            { gt: 0, lte: 1, color: \"#D3CCF2\" },\n            { gt: 1, lte: 5, color: \"#B3A9F2\" },\n            { gt: 5, lte: 16, color: \"#9087F2\" },\n            { gt: 16, color: \"#6366F1\" },\n          ],\n        },\n        calendar: {\n          top: 60,\n          left: 0,\n          right: 0,\n          cellSize: 15,\n          orient: \"horizontal\",\n          range: a,\n          itemStyle: {\n            borderWidth: 3,\n            borderCap: \"round\",\n            borderJoin: \"round\",\n            borderColor: getPlatteColor(\"background\"),\n          },\n          splitLine: { show: !1 },\n          dayLabel: { show: !0, nameMap: checkIfChinese() ? \"ZH\" : \"EN\" },\n          monthLabel: { show: !0, nameMap: checkIfChinese() ? \"ZH\" : \"EN\" },\n          yearLabel: {\n            show: !0,\n            position: \"bottom\",\n            margin: 12,\n            verticalAlign: \"top\",\n          },\n        },\n        series: {\n          type: \"heatmap\",\n          coordinateSystem: \"calendar\",\n          calendarIndex: 0,\n          data: o,\n          itemStyle: {\n            borderRadius: 3,\n          },\n        },\n      });\n    },\n  },\n  GitHubHeatMap_default = GitHubHeatMapAddon;",
        "title": "$:/plugins/Gk0Wk/echarts/addons/GitHubHeatMap.js",
        "type": "application/javascript",
        "modified": "20230913085623775",
        "module-type": "echarts-component",
        "Modern.TiddlyDev#IncludeSource": "true",
        "Modern.TiddlyDev#Origin": "addons/Gk0Wk/GitHubHeatMap.ts",
        "hide-body": "yes"
    }
]